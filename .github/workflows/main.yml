name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Download yt-dlp
        run: |
          mkdir -p resources
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe -o resources/yt-dlp.exe

      - name: Build Windows (${{ matrix.arch }})
        run: npm run build:win${{ matrix.arch == 'arm64' && '-arm64' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.arch }}
          path: |
            dist/*.exe
            dist/latest.yml
          compression-level: 9
          retention-days: 5

  create-release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate release tag
        if: github.event_name == 'workflow_dispatch'
        id: tag
        run: |
          echo "TAG_NAME=v$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && env.TAG_NAME || github.ref_name }}
          name: Release ${{ github.event_name == 'workflow_dispatch' && env.TAG_NAME || github.ref_name }}
          files: |
            windows-x64/**/*.exe
            windows-arm64/**/*.exe
            windows-x64/**/latest.yml
            windows-arm64/**/latest.yml
          draft: true
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
